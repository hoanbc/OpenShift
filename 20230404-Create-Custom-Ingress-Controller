1) Create SSL
oc create secret tls custom-ingress-custom-certs -n openshift-ingress --cert=<certificate.crt> --key=<key.key>

2) Create new ingress controller
cat custom-ingress-controller.yaml
apiVersion: operator.openshift.io/v1
kind: IngressController
metadata:
  name: dev
  namespace: openshift-ingress-operator
spec:
  domain: demo.testvn.click
  endpointPublishingStrategy:
    #type: HostNetwork
    #type: NodePortService
    type: LoadBalancerService
  nodePlacement:
    nodeSelector:
      matchLabels:
        node-role.kubernetes.io/infra: ""
    tolerations:
    - effect: NoSchedule
      operator: Equal
      key: node-function
      value: infra
  routeSelector:
    matchLabels:
      type: demo
  routeAdmission:
    namespaceOwnership: InterNamespaceAllowed
defaultCertificate:
    name: custom-ingress-custom-certs
domain: "demo.testvn.click"
nodePlacement:
  nodeSelector:
    matchLabels:
        ingress-custom-controller: "true"
replicas: 2
status: {}

3) Execption default route with tag
oc patch -n openshift-ingress-operator  IngressController/default  --type='merge'  -p '{"spec":{"routeSelector":{"matchExpressions":[{"key":"type","operator":"NotIn","values":["demo"]}]}}}'

4) Check
[root@lab-quay ~]# oc get pods -o wide -n openshift-ingress
NAME                              READY   STATUS    RESTARTS   AGE   IP              NODE                     NOMINATED NODE   READINESS GATES
router-default-67ccd5bb4d-24k68   1/1     Running   0          32h   10.200.12.161   ocp-f944j-worker-wdmz2   <none>           <none>
router-default-67ccd5bb4d-2kp77   1/1     Running   0          32h   10.200.12.59    ocp-f944j-worker-wfw9d   <none>           <none>
router-dev-8456f49f48-mcwr9       1/1     Running   0          6s    10.200.12.181   ocp-f944j-infra-pjnwc    <none>           <none>
router-dev-8456f49f48-prx2v       1/1     Running   0          6s    10.200.12.125   ocp-f944j-infra-kxr47    <none>           <none>

5) Option if use metallb
oc annotate svc/router-dev metallb.universe.tf/loadBalancerIPs='10.200.12.228' -n openshift-ingress
oc annotate svc/router-dev metallb.universe.tf/address-pool='prod-ip-pools' -n openshift-ingress

Link: https://access.redhat.com/solutions/6017531



###
	// LoadBalancerService publishes the ingress controller using a Kubernetes
	// LoadBalancer Service.
	LoadBalancerServiceStrategyType EndpointPublishingStrategyType = "LoadBalancerService"

	// HostNetwork publishes the ingress controller on node ports where the
	// ingress controller is deployed.
	HostNetworkStrategyType EndpointPublishingStrategyType = "HostNetwork"

	// Private does not publish the ingress controller.
	PrivateStrategyType EndpointPublishingStrategyType = "Private"

	// NodePortService publishes the ingress controller using a Kubernetes NodePort Service.
	NodePortServiceStrategyType EndpointPublishingStrategyType = "NodePortService"
